#pragma once
#include "devioctl.h"

#define IOCTL_INDEX0             0x800
#define IOCTL_INDEX1             0x801
#define IOCTL_INDEX2             0x802
#define IOCTL_INDEX3             0x803
#define IOCTL_INDEX4             0x804
#define IOCTL_INDEX5             0x805
#define IOCTL_INDEX6             0x806
#define IOCTL_INDEX7             0x807
#define IOCTL_INDEX8             0x808

#define IOCTL_MOUSE_GET_ATTRIBUTES \
    CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX0, METHOD_BUFFERED, FILE_READ_DATA)

#define IOCTL_MOUSE_INSERT_KEY \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX1, METHOD_IN_DIRECT, FILE_WRITE_DATA)

#define IOCTL_MOUSE_SET_DEVICE_ID \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX2, METHOD_BUFFERED, FILE_WRITE_DATA)

#define IOCTL_MOUSE_GET_DEVICE_ID \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX3, METHOD_BUFFERED, FILE_READ_DATA)

#define IOCTL_MOUSE_DETECT_DEVICE_ID \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX4, METHOD_BUFFERED, FILE_READ_DATA)

#define IOCTL_MOUSE_SET_FILTER \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX5, METHOD_IN_DIRECT, FILE_WRITE_DATA)

#define IOCTL_MOUSE_GET_FILTER \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX6, METHOD_OUT_DIRECT, FILE_READ_DATA)

#define IOCTL_MOUSE_SET_MODIFY \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX7, METHOD_IN_DIRECT, FILE_WRITE_DATA)

#define IOCTL_MOUSE_GET_MODIFY \
	CTL_CODE( FILE_DEVICE_MOUSE, IOCTL_INDEX8, METHOD_OUT_DIRECT, FILE_READ_DATA)

typedef struct _MOUSE_QUERY_RESULT {
	USHORT ActiveDeviceId;
	USHORT NumberOfDevices;
} MOUSE_QUERY_RESULT, * PMOUSE_QUERY_RESULT;

typedef enum _MOUSE_FILTER_MODE
{
	FILTER_MOUSE_NONE = 0x0000,
	FILTER_MOUSE_ALL = 0xFFFF,

	FILTER_MOUSE_LEFT_BUTTON_DOWN		= MOUSE_LEFT_BUTTON_DOWN,
	FILTER_MOUSE_LEFT_BUTTON_UP			= MOUSE_LEFT_BUTTON_UP,
	FILTER_MOUSE_LEFT_BUTTON_PRESS		= MOUSE_LEFT_BUTTON_DOWN | MOUSE_LEFT_BUTTON_UP,
	FILTER_MOUSE_RIGHT_BUTTON_DOWN		= MOUSE_RIGHT_BUTTON_DOWN,
	FILTER_MOUSE_RIGHT_BUTTON_UP		= MOUSE_RIGHT_BUTTON_UP,
	FILTER_MOUSE_RIGHT_BUTTON_PRESS		= MOUSE_RIGHT_BUTTON_UP | MOUSE_RIGHT_BUTTON_DOWN,
	FILTER_MOUSE_MIDDLE_BUTTON_DOWN		= MOUSE_MIDDLE_BUTTON_DOWN,
	FILTER_MOUSE_MIDDLE_BUTTON_UP		= MOUSE_MIDDLE_BUTTON_UP,
	FILTER_MOUSE_MIDDLE_BUTTON_PRESS	= MOUSE_MIDDLE_BUTTON_UP | MOUSE_MIDDLE_BUTTON_DOWN,

	FILTER_MOUSE_BUTTON_1_DOWN			= MOUSE_BUTTON_1_DOWN,
	FILTER_MOUSE_BUTTON_1_UP			= MOUSE_BUTTON_1_UP,
	FILTER_MOUSE_BUTTON_1_PRESS			= MOUSE_BUTTON_1_DOWN | MOUSE_BUTTON_1_UP,
	FILTER_MOUSE_BUTTON_2_DOWN			= MOUSE_BUTTON_2_DOWN,
	FILTER_MOUSE_BUTTON_2_UP			= MOUSE_BUTTON_2_UP,
	FILTER_MOUSE_BUTTON_2_PRESS			= MOUSE_BUTTON_2_DOWN | MOUSE_BUTTON_2_UP,
	FILTER_MOUSE_BUTTON_3_DOWN			= MOUSE_BUTTON_3_DOWN,
	FILTER_MOUSE_BUTTON_3_UP			= MOUSE_BUTTON_3_UP,
	FILTER_MOUSE_BUTTON_3_PRESS			= MOUSE_BUTTON_3_DOWN | MOUSE_BUTTON_3_UP,

	FILTER_MOUSE_BUTTON_4_DOWN			= MOUSE_BUTTON_4_DOWN,
	FILTER_MOUSE_BUTTON_4_UP			= MOUSE_BUTTON_4_UP,
	FILTER_MOUSE_BUTTON_4_PRESS			= MOUSE_BUTTON_4_DOWN | MOUSE_BUTTON_4_UP,
	FILTER_MOUSE_BUTTON_5_DOWN			= MOUSE_BUTTON_5_DOWN,
	FILTER_MOUSE_BUTTON_5_UP			= MOUSE_BUTTON_5_UP,
	FILTER_MOUSE_BUTTON_5_PRESS			= MOUSE_BUTTON_5_DOWN | MOUSE_BUTTON_5_UP,

	FILTER_MOUSE_WHEEL					= MOUSE_WHEEL,
	FILTER_MOUSE_HWHEEL					= MOUSE_HWHEEL,

	FILTER_MOUSE_MOVE					= 0x1000,
} MOUSE_FILTER_MODE, *PMOUSE_FILTER_MODE;

typedef struct _MOUSE_MODIFY_DATA {
	//Change scan code from
	USHORT FromState;
	//To this scan code
	USHORT ToState;
} MOUSE_MODIFY_DATA, * PMOUSE_MODIFY_DATA;

typedef struct _MOUSE_MODIFY_REQUEST {
	//
	//Number of modify data entries
	//
	USHORT ModifyCount;
	//
	//Modify data entries
	//
	PMOUSE_MODIFY_DATA ModifyData;

} MOUSE_MODIFY_REQUEST, * PMOUSE_MODIFY_REQUEST;
